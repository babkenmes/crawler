{"version":3,"sources":["logo.svg","LeftMenu.js","utils/errorHandling.js","services/group.js","services/keyword.js","utils/stateHelper.js","Components/Keywords/All.js","Components/Keywords/Running.js","Components/Keywords/Landed.js","Components/Keywords.js","services/device.js","Components/Devices.js","services/animation.js","Components/Animations.js","Components/Groups.js","services/container.js","Components/Containers.js","Components/Regions/styles.js","Components/Common/Widget/styles.js","Components/Common/Widget/Widget.js","Components/Common/Dot.js","Components/Regions/Stats.js","Components/Dashboard/Dashboard.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LeftMenu","classes","theme","open","setOpen","location","useLocation","useState","route","setroute","useEffect","pathname","replace","toLowerCase","console","log","Drawer","variant","className","clsx","drawer","drawerOpen","drawerClose","paper","toolbar","IconButton","onClick","direction","Divider","List","sidebar","ListItem","selected","button","key","to","component","RouterLink","ListItemIcon","ListItemText","primary","handleErrors","response","ok","Error","statusText","createGroup","data","fetch","method","headers","body","JSON","stringify","then","res","json","editGroup","_id","deleteGroup","id","getAll","getAnimationGroups","getDeviceGroups","createKeyword","editKeyword","deleteKeyword","page","page_size","sort","getRunning","getLanded","getRegionstats","region","resetByRegion","getNotReachedDetailedData","addItemAction","newData","prevState","newState","push","editItemAction","oldData","indexOf","deleteItemAction","splice","Active","deviceGroupLookup","animationGroupLookup","setError","setActiveKeywords","filtering","setFiltering","activeColumns","title","field","lookup","render","rowData","region_tag","type","editable","onRowDelete","keywordService","catch","err","toString","columns","query","Promise","resolve","reject","pageSize","orderBy","result","keywords","Number","totalCount","count","onRowAdd","keyword","onRowUpdate","actions","icon","tooltip","event","forEach","item","copyData","onRowCopy","FilterListIcon","isFreeAction","evt","options","selection","TabPanel","props","children","value","index","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","useStyles","makeStyles","root","backgroundColor","palette","background","Keywords","useTheme","React","setValue","error","animationGroups","setAnimationGroups","deviceGroups","setDeviceGroups","group","name","groupService","groups","Collapse","in","Alert","severity","action","aria-label","color","size","fontSize","AppBar","position","Tabs","onChange","newValue","indicatorColor","textColor","Tab","label","axis","onChangeIndex","dir","Grid","xs","createDevice","editDevice","deleteDevice","margin","spacing","width","Devices","devices","setDevices","creationData","setGroups","grouLookup","getAllDevices","getAllGroups","deviceService","device","createAnimation","editAnimation","deleteAnimation","Animations","animations","setAnimations","getAllAnimations","animationService","animation","COLUMNS","Groups","service","changeRegion","getgRegionTags","Containers","containers","setContainers","getContainers","contanerService","card","minHeight","display","flexDirection","visitsNumberContainer","alignItems","flexGrow","paddingBottom","progressSection","marginBottom","progressTitle","progress","pieChartLegendWrapper","height","justifyContent","marginRight","legendItemContainer","fullHeightBody","tableWidget","overflowX","progressBarPrimary","main","progressBarWarning","warning","performanceLegendWrapper","legendElement","legendElementText","marginLeft","serverOverviewElement","maxWidth","serverOverviewElementText","minWidth","paddingRight","serverOverviewElementChartWrapper","mainChartBody","mainChartHeader","breakpoints","only","flexWrap","mainChartHeaderLabels","order","marginTop","mainChartHeaderLabel","mainChartSelectRoot","borderColor","text","hint","mainChartSelect","padding","mainChartLegentElement","success","secondary","widgetWrapper","widgetHeader","widgetRoot","widgetBody","paddingLeft","noPadding","overflow","moreButton","noWidgetShadow","boxShadow","Widget","noBodyPadding","bodyClass","disableWidgetMenu","header","noHeaderPadding","headerClass","style","resetKeywords","downloadNotReached","moreButtonRef","setMoreButtonRef","isMoreMenuOpen","setMoreMenuOpen","Paper","classnames","Fragment","noWrap","aria-owns","aria-haspopup","buttonRef","anchorEl","onClose","disableAutoFocusItem","MenuItem","dotBase","borderRadius","transition","transitions","create","dotSmall","dotLarge","Dot","StatItem","setData","loading","setLoading","getRegionData","region_data","PieChartData","landed","free","running","upperTitle","fileName","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","container","ResponsiveContainer","PieChart","Pie","innerRadius","outerRadius","dataKey","map","entry","Cell","fill","total","Dashboard","regionTags","setRegionTags","lg","md","sm","Routes","exact","path","appBar","zIndex","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","up","mixins","content","Boolean","window","hostname","match","ReactDOM","CssBaseline","Toolbar","edge","val","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.898d6507.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport DevicesOtherIcon from '@material-ui/icons/DevicesOther';\r\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function LeftMenu({ classes, theme, open, setOpen }) {\r\n\r\n  const location = useLocation();\r\n  const [route, setroute] = useState(\"\");\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setroute(location.pathname.replace(\"/app/\", \"\").toLowerCase())\r\n  }, [location]);\r\n  console.log(route)\r\n  return (\r\n\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: open,\r\n        [classes.drawerClose]: !open,\r\n      })}\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        }),\r\n      }}\r\n    >\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List className={classes.sidebar}>\r\n        <ListItem selected={route == \"\"} button key=\"Dashboard\" to={`/app/`} component={RouterLink}>\r\n          <ListItemIcon><DashboardIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n        <ListItem selected={route == \"keywords\"} button key=\"Keywords\" to={`/app/keywords`} component={RouterLink}>\r\n          <ListItemIcon><VpnKeyIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Keywords\" />\r\n        </ListItem>\r\n        <ListItem selected={route == \"devices\"} button key=\"Devices\" to={`/app/Devices`} component={RouterLink}>\r\n          <ListItemIcon><DevicesOtherIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Devices\" />\r\n        </ListItem>\r\n        <ListItem selected={route == \"animations\"} button key=\"Animations\" to={`/app/Animations`} component={RouterLink}>\r\n          <ListItemIcon><DirectionsRunIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Animations\" />\r\n        </ListItem>\r\n        <ListItem selected={route == \"groups\"} button key=\"Groups\" to={`/app/Groups`} component={RouterLink}>\r\n          <ListItemIcon><DashboardIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Groups\" />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem selected={route == \"containers\"} button key=\"Containers\" to={`/app/Containers`} component={RouterLink}>\r\n          <ListItemIcon><VpnKeyIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Containers\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <Divider />\r\n    </Drawer>\r\n  );\r\n}","export const handleErrors = (response) => {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import { handleErrors } from \"../utils/errorHandling\"\r\nexport const createGroup = (data) => {\r\n    return fetch(\"/api/groups\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const editGroup = (data) => {\r\n    return fetch(`/api/groups/${data._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const deleteGroup = (id) => {\r\n    return fetch(`/api/groups/${id}`, {\r\n        method: 'DELETE'\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const getAll = () => fetch(\"/api/groups\").then(handleErrors).then(response => response.json())\r\n\r\nexport const getGroup = (id) => fetch(`/api/groups/${id}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const getAnimationGroups = () => fetch(`/api/groups/getByType/Animation`).then(handleErrors).then(response => response.json())\r\nexport const getDeviceGroups = () => fetch(`/api/groups/getByType/Device`).then(handleErrors).then(response => response.json())\r\n","import { handleErrors } from \"../utils/errorHandling\"\r\n\r\n\r\nexport const createKeyword = (data) => {\r\n    return fetch(\"/api/keywords\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const editKeyword = (data) => {\r\n    return fetch(`/api/keywords/${data._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const deleteKeyword = (id) => {\r\n    return fetch(`/api/keywords/${id}`, {\r\n        method: 'DELETE'\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const markStopped = (id) => {\r\n    return fetch(`/api/keywords/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ running: false })\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\n\r\n\r\nexport const getAll = (page = 0,page_size=5, sort = 'created') => fetch(`/api/keywords/all/${page}/${page_size}/${sort}`).then(handleErrors).then(response => response.json())\r\nexport const getRunning = (page = 0,page_size=5, sort = 'created') => fetch(`/api/keywords/running/${page}/${page_size}/${sort}`).then(handleErrors).then(response => response.json())\r\nexport const getLanded = (page = 0,page_size=5, sort = 'created') => fetch(`/api/keywords/landed/${page}/${page_size}/${sort}`).then(handleErrors).then(response => response.json())\r\nexport const getWaiting = (page = 0,page_size=5, sort = 'created') => fetch(`/api/keywords/waiting/${page}/${page_size}/${sort}`).then(handleErrors).then(response => response.json())\r\nexport const getWithErrors = (page = 0,page_size=5, sort = 'created') => fetch(`/api/keywords/errors/${page}/${page_size}/${sort}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const getRegionstats = (region) => fetch(`/api/keywords/regionstats/${region}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const resetByRegion = (region) => fetch(`/api/keywords/read/${region}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const getNotReachedDetailedData = (region) => fetch(`/api/keywords/notreached_detailed/${region}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const getKeyword = (id) => () => fetch(`/api/keywords/${id}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const resumeAll = () => fetch(\"/api/keywords/resumeall\").then(handleErrors).then(response => response.json())\r\n\r\n","export const addItemAction = (newData) => (prevState) => {\r\n    const newState = [...prevState];\r\n    newState.push(newData);\r\n    return newState;\r\n}\r\nexport const editItemAction = (newData, oldData) => (prevState) => {\r\n    const newState = [...prevState];\r\n    debugger\r\n    newState[newState.indexOf(oldData)] = newData;\r\n    return newState;\r\n}\r\nexport const deleteItemAction = (oldData) => (prevState) => {\r\n    const newState = [...prevState];\r\n    newState.splice(newState.indexOf(oldData), 1);\r\n    return newState;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from 'material-table';\r\nimport * as keywordService from \"../../services/keyword\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../../utils/stateHelper\"\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n\r\n\r\n\r\nexport default function Active({ deviceGroupLookup, animationGroupLookup, setError }) {\r\n    const [activeKeywords, setActiveKeywords] = useState([]);\r\n\r\n    const [filtering, setFiltering] = useState(false);\r\n\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(0);\r\n\r\n    const activeColumns = [\r\n        { title: 'ID', field: '_id' },\r\n        { title: 'Words', field: 'words' },\r\n        // { title: 'count', field: 'count', type: 'numeric' },\r\n        { title: 'Animation group', field: 'animation_group', lookup: animationGroupLookup },\r\n        { title: 'Device group', field: 'device_group', lookup: deviceGroupLookup },\r\n        {\r\n            title: 'Region', field: 'region_tag',\r\n            render: rowData => <span>{rowData.region_tag || \"Default\"}</span>\r\n        },\r\n        { title: 'Domain', field: 'domain' },\r\n        { title: 'TLD', field: 'tld' },\r\n        { title: 'Last run', field: 'last_run', type: 'datetime', editable: 'never' }\r\n    ];\r\n\r\n    const handlePageChange = (newPage = 0) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const getKeywords = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            keywordService.getAll(query.page, query.pageSize, query?.orderBy?.field)\r\n                .then(result => {\r\n                    resolve({\r\n                        data: result.keywords,\r\n                        page: Number(result.page),\r\n                        totalCount: result.count,\r\n                    })\r\n                }).catch(err=>{\r\n                    console.log(err)\r\n                })\r\n        })\r\n    }\r\n    const onRowAdd = (data) => {\r\n        return keywordService.createKeyword(data).then(({ keyword }) => {\r\n            setActiveKeywords(addItemAction(keyword))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowCopy = (data) => {\r\n        return keywordService.createKeyword(data).then(({ keyword }) => {\r\n            setActiveKeywords(addItemAction(keyword))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowUpdate = (newData, oldData) => {\r\n        return keywordService.editKeyword(newData).then(({ keyword }) => {\r\n            setActiveKeywords(editItemAction(keyword, oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowDelete = (oldData) => {\r\n        return keywordService.deleteKeyword(oldData._id).then(data => {\r\n            setActiveKeywords(deleteItemAction(oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    return (<MaterialTable\r\n        title=\"Active\"\r\n        columns={activeColumns}\r\n        data={getKeywords}\r\n        editable={{\r\n            onRowAdd,\r\n            onRowUpdate,\r\n            onRowDelete,\r\n        }}\r\n        actions={[\r\n            {\r\n                icon: \"add\",\r\n                tooltip: 'Copy this keyword',\r\n                onClick: (event, data) => data.forEach(item => {\r\n                    const copyData = { ...item }\r\n                    delete copyData._id\r\n                    onRowCopy(copyData)\r\n                })\r\n            },\r\n            {\r\n                icon: FilterListIcon,\r\n                tooltip: 'Enable filtering',\r\n                isFreeAction: true,\r\n                onClick: (event) => setFiltering(!filtering)\r\n            },\r\n            {\r\n                tooltip: 'Remove All Selected Users',\r\n                icon: 'delete',\r\n                onClick: (evt, data) => data.forEach(item => onRowDelete(item))\r\n            }\r\n        ]}\r\n        options={{\r\n            selection: true,\r\n            filtering: filtering\r\n        }}\r\n    />\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from 'material-table';\r\nimport * as keywordService from \"../../services/keyword\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../../utils/stateHelper\"\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n\r\n\r\n\r\nexport default function Active({ deviceGroupLookup, animationGroupLookup, setError }) {\r\n    const [activeKeywords, setActiveKeywords] = useState([]);\r\n\r\n    const [filtering, setFiltering] = useState(false);\r\n\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(0);\r\n\r\n    const activeColumns = [\r\n        { title: 'ID', field: '_id' },\r\n        { title: 'Words', field: 'words' },\r\n        // { title: 'count', field: 'count', type: 'numeric' },\r\n        { title: 'Animation group', field: 'animation_group', lookup: animationGroupLookup },\r\n        { title: 'Device group', field: 'device_group', lookup: deviceGroupLookup },\r\n        {\r\n            title: 'Region', field: 'region_tag',\r\n            render: rowData => <span>{rowData.region_tag || \"Default\"}</span>\r\n        },\r\n        { title: 'Domain', field: 'domain' },\r\n        { title: 'TLD', field: 'tld' },\r\n        { title: 'Last run', field: 'last_run', type: 'datetime', editable: 'never' }\r\n    ];\r\n\r\n    const handlePageChange = (newPage = 0) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const getKeywords = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            keywordService.getRunning(query.page, query.pageSize, query?.orderBy?.field )\r\n                .then(result => {\r\n                    resolve({\r\n                        data: result.keywords,\r\n                        page: Number(result.page),\r\n                        totalCount: result.count,\r\n                    })\r\n                }).catch(err=>{\r\n                    console.log(err)\r\n                })\r\n        })\r\n    }\r\n    const onRowAdd = (data) => {\r\n        return keywordService.createKeyword(data).then(({ keyword }) => {\r\n            setActiveKeywords(addItemAction(keyword))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowCopy = (data) => {\r\n        return keywordService.createKeyword(data).then(({ keyword }) => {\r\n            setActiveKeywords(addItemAction(keyword))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowUpdate = (newData, oldData) => {\r\n        return keywordService.editKeyword(newData).then(({ keyword }) => {\r\n            setActiveKeywords(editItemAction(keyword, oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowDelete = (oldData) => {\r\n        return keywordService.deleteKeyword(oldData._id).then(data => {\r\n            setActiveKeywords(deleteItemAction(oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    return (<MaterialTable\r\n        title=\"Active\"\r\n        columns={activeColumns}\r\n        data={getKeywords}\r\n        editable={{\r\n            onRowAdd,\r\n            onRowUpdate,\r\n            onRowDelete,\r\n        }}\r\n        actions={[\r\n            {\r\n                icon: \"add\",\r\n                tooltip: 'Copy this keyword',\r\n                onClick: (event, data) => data.forEach(item => {\r\n                    const copyData = { ...item }\r\n                    delete copyData._id\r\n                    onRowCopy(copyData)\r\n                })\r\n            },\r\n            {\r\n                icon: FilterListIcon,\r\n                tooltip: 'Enable filtering',\r\n                isFreeAction: true,\r\n                onClick: (event) => setFiltering(!filtering)\r\n            },\r\n            {\r\n                tooltip: 'Remove All Selected Users',\r\n                icon: 'delete',\r\n                onClick: (evt, data) => data.forEach(item => onRowDelete(item))\r\n            }\r\n        ]}\r\n        options={{\r\n            selection: true,\r\n            filtering: filtering\r\n        }}\r\n    />\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from 'material-table';\r\nimport * as keywordService from \"../../services/keyword\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../../utils/stateHelper\"\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n\r\n\r\n\r\nexport default function Active({ deviceGroupLookup, animationGroupLookup, setError }) {\r\n    const [activeKeywords, setActiveKeywords] = useState([]);\r\n\r\n    const [filtering, setFiltering] = useState(false);\r\n\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(0);\r\n\r\n    const activeColumns = [\r\n        { title: 'ID', field: '_id' },\r\n        { title: 'Words', field: 'words' },\r\n        // { title: 'count', field: 'count', type: 'numeric' },\r\n        { title: 'Animation group', field: 'animation_group', lookup: animationGroupLookup },\r\n        { title: 'Device group', field: 'device_group', lookup: deviceGroupLookup },\r\n        {\r\n            title: 'Region', field: 'region_tag',\r\n            render: rowData => <span>{rowData.region_tag || \"Default\"}</span>\r\n        },\r\n        { title: 'Domain', field: 'domain' },\r\n        { title: 'TLD', field: 'tld' },\r\n        { title: 'Last run', field: 'last_run', type: 'datetime', editable: 'never' }\r\n    ];\r\n\r\n    const handlePageChange = (newPage = 0) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const getKeywords = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            keywordService.getLanded(query.page, query.pageSize, query?.orderBy?.field )\r\n                .then(result => {\r\n                    resolve({\r\n                        data: result.keywords,\r\n                        page: Number(result.page),\r\n                        totalCount: result.count,\r\n                    })\r\n                }).catch(err=>{\r\n                    console.log(err)\r\n                })\r\n        })\r\n    }\r\n    \r\n    const onRowAdd = (data) => {\r\n        return keywordService.createKeyword(data).then(({ keyword }) => {\r\n            setActiveKeywords(addItemAction(keyword))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowCopy = (data) => {\r\n        return keywordService.createKeyword(data).then(({ keyword }) => {\r\n            setActiveKeywords(addItemAction(keyword))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowUpdate = (newData, oldData) => {\r\n        return keywordService.editKeyword(newData).then(({ keyword }) => {\r\n            setActiveKeywords(editItemAction(keyword, oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowDelete = (oldData) => {\r\n        return keywordService.deleteKeyword(oldData._id).then(data => {\r\n            setActiveKeywords(deleteItemAction(oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    return (<MaterialTable\r\n        title=\"Active\"\r\n        columns={activeColumns}\r\n        data={getKeywords}\r\n        editable={{\r\n            onRowAdd,\r\n            onRowUpdate,\r\n            onRowDelete,\r\n        }}\r\n        actions={[\r\n            {\r\n                icon: \"add\",\r\n                tooltip: 'Copy this keyword',\r\n                onClick: (event, data) => data.forEach(item => {\r\n                    const copyData = { ...item }\r\n                    delete copyData._id\r\n                    onRowCopy(copyData)\r\n                })\r\n            },\r\n            {\r\n                icon: FilterListIcon,\r\n                tooltip: 'Enable filtering',\r\n                isFreeAction: true,\r\n                onClick: (event) => setFiltering(!filtering)\r\n            },\r\n            {\r\n                tooltip: 'Remove All Selected Users',\r\n                icon: 'delete',\r\n                onClick: (evt, data) => data.forEach(item => onRowDelete(item))\r\n            }\r\n        ]}\r\n        options={{\r\n            selection: true,\r\n            filtering: filtering\r\n        }}\r\n    />\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as groupService from \"../services/group\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport All from \"./Keywords/All\"\r\nimport Running from \"./Keywords/Running\"\r\nimport Landed from \"./Keywords/Landed\"\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    }\r\n}));\r\n\r\nexport default function Keywords() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n    const [error, setError] = useState(false);\r\n    const [animationGroups, setAnimationGroups] = useState([]);\r\n    const [deviceGroups, setDeviceGroups] = useState([]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    const animationGroupLookup = {};\r\n    animationGroups.forEach(group => {\r\n        animationGroupLookup[group._id] = group.name;\r\n    })\r\n\r\n    const deviceGroupLookup = {};\r\n    deviceGroups.forEach(group => {\r\n        deviceGroupLookup[group._id] = group.name;\r\n    })\r\n\r\n    useEffect(() => {\r\n        getAnimationGroups();\r\n        getDeviceGroups();\r\n    }, [page]);\r\n\r\n    const getAnimationGroups = () => {\r\n        return groupService.getAnimationGroups().then(({ groups }) => setAnimationGroups(groups)).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    const getDeviceGroups = () => {\r\n        return groupService.getDeviceGroups().then(({ groups }) => setDeviceGroups(groups)).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Collapse in={error}>\r\n                <Alert\r\n                    severity=\"error\"\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setError(false);\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {error}\r\n                </Alert>\r\n            </Collapse>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"full width tabs example\"\r\n                >\r\n                    <Tab label=\"All\" {...a11yProps(0)} />\r\n                    <Tab label=\"Running\" {...a11yProps(1)} />\r\n                    <Tab label=\"Landed\" {...a11yProps(2)} />\r\n\r\n                    {/* <Tab label=\"Finished keywords\" {...a11yProps(1)} /> */}\r\n                    {/* <Tab label=\"Keyword with error\" {...a11yProps(2)} /> */}\r\n                </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={value}\r\n                onChangeIndex={handleChangeIndex}\r\n            >\r\n                <TabPanel value={value} index={0} dir={theme.direction}>\r\n                    <Grid item xs={12} className=\"productType-container\">\r\n                        <All deviceGroupLookup={deviceGroupLookup} animationGroupLookup={animationGroupLookup} setError={setError} />\r\n                    </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} dir={theme.direction}>\r\n                    <Grid item xs={12} className=\"productType-container\">\r\n                        <Running deviceGroupLookup={deviceGroupLookup} animationGroupLookup={animationGroupLookup} setError={setError} />\r\n                    </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2} dir={theme.direction}>\r\n                    <Grid item xs={12} className=\"productType-container\">\r\n                        <Landed deviceGroupLookup={deviceGroupLookup} animationGroupLookup={animationGroupLookup} setError={setError} />\r\n                    </Grid>\r\n                </TabPanel>\r\n               \r\n            </SwipeableViews>\r\n            <Grid item xs={12} className=\"productType-container\">\r\n                <Running deviceGroupLookup={deviceGroupLookup} animationGroupLookup={animationGroupLookup} setError={setError} />\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import { handleErrors } from \"../utils/errorHandling\"\r\nexport const createDevice = (data) => {\r\n    return fetch(\"/api/devices\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const editDevice = (data) => {\r\n    return fetch(`/api/devices/${data._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const deleteDevice = (id) => {\r\n    return fetch(`/api/devices/${id}`, {\r\n        method: 'DELETE'\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const getAll = () => fetch(\"/api/devices\").then(handleErrors).then(response => response.json())\r\n\r\nexport const getDevice = (id) => () => fetch(`/api/devices/${id}`).then(handleErrors).then(response => response.json())","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table';\r\nimport * as deviceService from \"../services/device\"\r\nimport * as groupService from \"../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function Devices() {\r\n    const classes = useStyles();\r\n    const [devices, setDevices] = useState([]);\r\n    const [creationData, setCreationData] = useState({ type: \"\", name: \"\" });\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n    const [error, setError] = useState(false);\r\n    const [groups, setGroups] = useState([]);\r\n\r\n\r\n    const grouLookup = {};\r\n    groups.forEach(group=>{\r\n        grouLookup[group._id] = group.name;\r\n    })\r\n\r\n    const columns = [\r\n        { title: 'Name', field: 'name' },\r\n        { title: 'User Agent', field: 'user_agent' },\r\n        { title: 'Window Size', field: 'window_size' },\r\n        { title: 'Is Mobile', field: 'mobile', type: 'boolean' },\r\n        { title: 'Group', field: 'group', lookup: grouLookup }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        getAllDevices();\r\n        getAllGroups();\r\n    }, [page]);\r\n\r\n    const getAllGroups = () => {\r\n        return groupService.getDeviceGroups().then(({groups}) => setGroups(groups)).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    const getAllDevices = () => {\r\n        return deviceService.getAll().then(data => setDevices(data)).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowAdd = (data) => {\r\n        return deviceService.createDevice(data).then(({device}) => {\r\n            setDevices(addItemAction(device))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    const onRowUpdate = (newData, oldData) => {\r\n        return deviceService.editDevice(newData).then(({device}) => {\r\n            setDevices(editItemAction(device, oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowDelete = (oldData) => {\r\n        return deviceService.deleteDevice(oldData._id).then(data => {\r\n            setDevices(deleteItemAction(oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const nameChange = (event) => {\r\n        const name = event.target.value;\r\n        setCreationData({ ...creationData, name })\r\n    }\r\n    const typeChange = (event) => {\r\n        const type = event.target.value;\r\n        setCreationData({ ...creationData, type })\r\n    }\r\n    const { name, type } = creationData || {};\r\n\r\n    return <Grid item xs={10} className=\"productType-container\">\r\n        <Collapse in={error}>\r\n            <Alert\r\n                severity=\"error\"\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setError(false);\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {error}\r\n        </Alert>\r\n        </Collapse>\r\n        <MaterialTable\r\n            title=\"Devices\"\r\n            columns={columns}\r\n            data={devices}\r\n            editable={{\r\n                onRowAdd,\r\n                onRowUpdate,\r\n                onRowDelete,\r\n            }}\r\n        />\r\n    </Grid>\r\n\r\n}","import { handleErrors } from \"../utils/errorHandling\"\r\nexport const createAnimation = (data) => {\r\n    return fetch(\"/api/animations\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const editAnimation = (data) => {\r\n    return fetch(`/api/animations/${data._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const deleteAnimation = (id) => {\r\n    return fetch(`/api/animations/${id}`, {\r\n        method: 'DELETE'\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const getAll = () => fetch(\"/api/animations\").then(handleErrors).then(response => response.json())\r\n\r\nexport const getAnimation = (id) => () => fetch(`/api/animations/${id}`).then(handleErrors).then(response => response.json())","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table';\r\nimport * as animationService from \"../services/animation\"\r\nimport * as groupService from \"../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function Animations() {\r\n    const classes = useStyles();\r\n    const [animations, setAnimations] = useState([]);\r\n    const [creationData, setCreationData] = useState({ type: \"\", name: \"\" });\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n    const [error, setError] = useState(false);\r\n    const [groups, setGroups] = useState([]);\r\n\r\n\r\n    const grouLookup = {};\r\n    groups.forEach(group=>{\r\n        grouLookup[group._id] = group.name;\r\n    })\r\n\r\n    const columns = [\r\n        { title: 'Name', field: 'name' },\r\n        { title: 'Group', field: 'group', lookup: grouLookup }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        getAllAnimations();\r\n        getAllGroups();\r\n    }, [page]);\r\n\r\n    const getAllGroups = () => {\r\n        return groupService.getAnimationGroups().then(({groups}) => setGroups(groups)).catch(err => setError(err.toString()));\r\n    }\r\n    \r\n    const getAllAnimations = () => {\r\n        return animationService.getAll().then(data => setAnimations(data)).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowAdd = (data) => {\r\n        return animationService.createAnimation(data).then(({animation}) => {\r\n            setAnimations(addItemAction(animation))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    const onRowUpdate = (newData, oldData) => {\r\n        return animationService.editAnimation(newData).then(({animation}) => {\r\n            setAnimations(editItemAction(animation, oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowDelete = (oldData) => {\r\n        return animationService.deleteAnimation(oldData._id).then(data => {\r\n            setAnimations(deleteItemAction(oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const nameChange = (event) => {\r\n        const name = event.target.value;\r\n        setCreationData({ ...creationData, name })\r\n    }\r\n    const typeChange = (event) => {\r\n        const type = event.target.value;\r\n        setCreationData({ ...creationData, type })\r\n    }\r\n    const { name, type } = creationData || {};\r\n\r\n    return <Grid item xs={10} className=\"productType-container\">\r\n        <Collapse in={error}>\r\n            <Alert\r\n                severity=\"error\"\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setError(false);\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {error}\r\n        </Alert>\r\n        </Collapse>\r\n        <MaterialTable\r\n            title=\"Animations\"\r\n            columns={columns}\r\n            data={animations}\r\n            editable={{\r\n                onRowAdd,\r\n                onRowUpdate,\r\n                onRowDelete,\r\n            }}\r\n        />\r\n    </Grid>\r\n\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table';\r\nimport * as service from \"../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst ANIMATYION_TYPE = \"Animation\"\r\nconst DEVICE_TYPE = \"Device\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst COLUMNS = [\r\n    { title: 'Name', field: 'name' },\r\n    { title: 'Type', field: 'type', lookup: { [ANIMATYION_TYPE]: ANIMATYION_TYPE, [DEVICE_TYPE]: DEVICE_TYPE } }\r\n]\r\n\r\n\r\nexport default function Groups() {\r\n    const classes = useStyles();\r\n    const [groups, setGroups] = useState([]);\r\n    const [creationData, setCreationData] = useState({ type: \"\", name: \"\" });\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getAllGroups();\r\n    }, [page]);\r\n\r\n\r\n    const getAllGroups = () => {\r\n        return service.getAll().then(data => setGroups(data)).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowAdd = (data) => {\r\n        return service.createGroup(data).then(({group}) => {\r\n            setGroups(addItemAction(group))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    const onRowUpdate = (newData, oldData) => {\r\n        return service.editGroup(newData).then(({group}) => {\r\n            setGroups(editItemAction(group, oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowDelete = (oldData) => {\r\n        return service.deleteGroup(oldData._id).then(data => {\r\n            setGroups(deleteItemAction(oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const nameChange = (event) => {\r\n        const name = event.target.value;\r\n        setCreationData({ ...creationData, name })\r\n    }\r\n    const typeChange = (event) => {\r\n        const type = event.target.value;\r\n        setCreationData({ ...creationData, type })\r\n    }\r\n    const { name, type } = creationData || {};\r\n\r\n    return <Grid item xs={10} className=\"productType-container\">\r\n        <Collapse in={error}>\r\n            <Alert\r\n                severity=\"error\"\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setError(false);\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {error}\r\n        </Alert>\r\n        </Collapse>\r\n        <MaterialTable\r\n            title=\"Groups\"\r\n            pageSize={50}\r\n            columns={COLUMNS}\r\n            data={groups}\r\n            editable={{\r\n                onRowAdd,\r\n                onRowUpdate,\r\n                onRowDelete,\r\n            }}\r\n        />\r\n    </Grid>\r\n\r\n}","import { handleErrors } from \"../utils/errorHandling\"\r\n\r\nexport const getAll = () => fetch(\"/api/containers\").then(handleErrors).then(response => response.json())\r\nexport const getRegions = () => fetch(\"/api/regions\").then(handleErrors).then(response => response.json())\r\n\r\nexport const changeRegion = (id) => fetch(`/api/containers/changeregion/${id}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const getgRegionTags = () => fetch(\"/api/containers/getregiontags\").then(handleErrors).then(response => response.json())\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table';\r\nimport * as contanerService from \"../services/container\"\r\nimport * as groupService from \"../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function Containers() {\r\n    const classes = useStyles();\r\n    const [containers, setContainers] = useState([]);\r\n\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n    const [error, setError] = useState(false);\r\n\r\n    const columns = [\r\n        { title: 'Name', field: 'name' },\r\n        { title: 'VPN', field: 'vpn_name' },\r\n        { title: 'Region', field: 'current_region' },\r\n        { title: 'Location', field: 'geo_location' },\r\n        { title: 'Last region change', field: 'last_region_change', type: 'datetime' }\r\n    ];\r\n\r\n    const [filtering, setFiltering] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getContainers();\r\n    }, [page]);\r\n\r\n    const getContainers = () => {\r\n        return contanerService.getAll().then(data => setContainers(data)).catch(err => setError(err.toString()));\r\n    }\r\n    const changeRegion = (id) => {\r\n        return contanerService.changeRegion(id).then(data => getContainers()).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    return <Grid item xs={10} className=\"productType-container\">\r\n        <Collapse in={error}>\r\n            <Alert\r\n                severity=\"error\"\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setError(false);\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {error}\r\n            </Alert>\r\n        </Collapse>\r\n        <MaterialTable\r\n            title=\"Containers\"\r\n            columns={columns}\r\n            data={containers}\r\n            actions={[\r\n                {\r\n                    icon: \"Change region\",\r\n                    tooltip: 'Change the region',\r\n                    onClick: (event, data) => changeRegion(data._id)\r\n                },\r\n                {\r\n                    icon: FilterListIcon,\r\n                    tooltip: 'Enable filtering',\r\n                    isFreeAction: true,\r\n                    onClick: (event) => setFiltering(!filtering)\r\n                }\r\n            ]}\r\n            options={{\r\n                filtering: filtering,\r\n                pageSize:20\r\n            }}\r\n        />\r\n    </Grid>\r\n\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  card: {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  visitsNumberContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1,\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  progressSection: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  progressTitle: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  progress: {\r\n    marginBottom: theme.spacing(1),\r\n    backgroundColor: 'rgb(236, 236, 236)',\r\n  },\r\n  pieChartLegendWrapper: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  legendItemContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  fullHeightBody: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  tableWidget: {\r\n    overflowX: \"auto\",\r\n  },\r\n  progressBarPrimary: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  progressBarWarning: {\r\n    backgroundColor: theme.palette.warning.main,\r\n  },\r\n  performanceLegendWrapper: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  legendElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  legendElementText: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  serverOverviewElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  serverOverviewElementText: {\r\n    minWidth: 145,\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  serverOverviewElementChartWrapper: {\r\n    width: \"100%\",\r\n  },\r\n  mainChartBody: {\r\n    overflowX: \"auto\",\r\n  },\r\n  mainChartHeader: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      flexWrap: \"wrap\",\r\n    },\r\n  },\r\n  mainChartHeaderLabels: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      order: 3,\r\n      width: \"100%\",\r\n      justifyContent: \"center\",\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  mainChartHeaderLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  mainChartSelectRoot: {\r\n    borderColor: theme.palette.text.hint + \"80 !important\",\r\n  },\r\n  mainChartSelect: {\r\n    padding: 10,\r\n    paddingRight: 25,\r\n  },\r\n  mainChartLegentElement: {\r\n    fontSize: \"18px !important\",\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main,\r\n    color: '#fff',\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main,\r\n    color: '#fff',\r\n  },\r\n  secondary: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: '#fff',\r\n  }\r\n}));","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  widgetWrapper: {\r\n    display: \"flex\",\r\n    minHeight: \"100%\",\r\n  },\r\n  widgetHeader: {\r\n    padding: theme.spacing(3),\r\n    paddingBottom: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  widgetRoot: {\r\n    // boxShadow: theme.customShadows.widget,\r\n  },\r\n  widgetBody: {\r\n    paddingBottom: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  noPadding: {\r\n    padding: 0,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n  },\r\n  moreButton: {\r\n    margin: -theme.spacing(1),\r\n    padding: 0,\r\n    width: 40,\r\n    height: 40,\r\n    color: theme.palette.text.hint,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"rgba(255, 255, 255, 0.35)\",\r\n    },\r\n  },\r\n  noWidgetShadow: {\r\n    boxShadow: 'none'\r\n  }\r\n}));","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function Widget({\r\n  children,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  resetKeywords,\r\n  downloadNotReached,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\r\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} style={style && {...style}}>\r\n      <Paper className={classes.paper} classes={{ root: classnames(classes.widgetRoot, {\r\n        [classes.noWidgetShadow]: noWidgetShadow\r\n        }) }}>\r\n        <div className={classnames(classes.widgetHeader, {\r\n          [classes.noPadding]: noHeaderPadding,\r\n          [headerClass]: headerClass\r\n        })}>\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                {title}\r\n              </Typography>\r\n              {!disableWidgetMenu && (\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  classes={{ root: classes.moreButton }}\r\n                  aria-owns=\"widget-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={() => setMoreMenuOpen(true)}\r\n                  buttonRef={setMoreButtonRef}\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n      <Menu\r\n        id=\"widget-menu\"\r\n        open={isMoreMenuOpen}\r\n        anchorEl={moreButtonRef}\r\n        onClose={() => setMoreMenuOpen(false)}\r\n        disableAutoFocusItem\r\n      >\r\n        <MenuItem onClick={resetKeywords}>\r\n          <Typography>Reset keywords</Typography>\r\n        </MenuItem>\r\n        <MenuItem onClick={downloadNotReached}>\r\n          <Typography>Download not reached</Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nvar useStyles = makeStyles(theme => ({\r\n  dotBase: {\r\n    width: 8,\r\n    height: 8,\r\n    backgroundColor: theme.palette.text.hint,\r\n    borderRadius: \"50%\",\r\n    transition: theme.transitions.create(\"background-color\"),\r\n  },\r\n  dotSmall: {\r\n    width: 5,\r\n    height: 5\r\n  },\r\n  dotLarge: {\r\n    width: 11,\r\n    height: 11,\r\n  },\r\n}));\r\n\r\nexport default function Dot({ size, color }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <div\r\n      className={classnames(classes.dotBase, {\r\n        [classes.dotLarge]: size === \"large\",\r\n        [classes.dotSmall]: size === \"small\",\r\n      })}\r\n      style={{\r\n        backgroundColor:\r\n          color && theme.palette[color] && theme.palette[color].main,\r\n      }}\r\n    />\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\r\nimport useStyles from \"./styles\"\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Widget from \"../Common/Widget/Widget\"\r\nimport Dot from \"../Common/Dot\"\r\nimport { resetByRegion, getNotReachedDetailedData } from \"../../services/keyword\"\r\nimport { getRegionstats } from \"../../services/keyword\"\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport default function StatItem({ id }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getRegionData(id)\r\n    }, [id]);\r\n\r\n    function getRegionData(id) {\r\n        return getRegionstats(id).then(region_data => {\r\n            setLoading(false);\r\n            setData({ ...region_data, name: id })\r\n        })\r\n    }\r\n    \r\n    const downloadNotReachedExcel = ()=>{\r\n        return getNotReachedDetailedData(id).then((data)=>{\r\n            const fileName = `region_${id}_keys.xlsx`;\r\n            const ws = XLSX.utils.json_to_sheet(data);\r\n            const wb = XLSX.utils.book_new();\r\n            XLSX.utils.book_append_sheet(wb, ws, 'test');\r\n            XLSX.writeFile(wb, fileName);\r\n        })\r\n    }\r\n\r\n    const PieChartData = [\r\n        { name: \"Landed      \", value: data.landed, color: \"success\" },\r\n        { name: \"Free        \", value: data.free, color: \"warning\" },\r\n        { name: \"Running     \", value: data.running, color: \"secondary\" },\r\n        // { name: \"Captcha     \", value: data.captcha, color: \"secondary\" },\r\n    ];\r\n\r\n    const handle_resetKeywords = () => {\r\n        setLoading(true);\r\n        resetByRegion(data.name).then(data => {\r\n            getRegionData(id)\r\n        })\r\n    }\r\n\r\n    const handle_downloadNotReached = () => {\r\n        setLoading(true);\r\n        downloadNotReachedExcel(data.name).then(data => {\r\n            getRegionData(id)\r\n        })\r\n    }\r\n\r\n    return (loading ? <div>Loading...</div> :\r\n        <Widget title={data.name} upperTitle className={classes.card} resetKeywords={handle_resetKeywords} downloadNotReached={handle_downloadNotReached} >\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <ResponsiveContainer width=\"100%\" height={144}>\r\n                        <PieChart>\r\n                            <Pie\r\n                                data={PieChartData}\r\n                                innerRadius={30}\r\n                                outerRadius={40}\r\n                                dataKey=\"value\"\r\n                            >\r\n                                {PieChartData.map((entry, index) => (\r\n                                    <Cell\r\n                                        key={`cell-${index}`}\r\n                                        fill={theme.palette[entry.color].main}\r\n                                    />\r\n                                ))}\r\n                            </Pie>\r\n                        </PieChart>\r\n                    </ResponsiveContainer>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <div className={classes.pieChartLegendWrapper}>\r\n                        {PieChartData.map(({ name, value, color }, index) => (\r\n                            <div key={color} className={classes.legendItemContainer}>\r\n                                <Dot color={color} />\r\n                                <span className=\"region-state-wrapper\">\r\n                                    <span className=\"region-state\" >\r\n                                        {name}\r\n                                    </span>\r\n                                    <span className=\"region-state-value\">\r\n                                        {value}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                        <div key=\"error \" className={classes.legendItemContainer}>\r\n                            <Dot color=\"error\" />\r\n                            <span className=\"region-state-wrapper\">\r\n                                <span className=\"region-state\" >\r\n                                    Err\r\n                                </span>\r\n                                <span className=\"region-state-value\">\r\n                                    {data.total - (data.landed + data.free + data.running)}\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                        <div key=\"primary\" className={classes.legendItemContainer}>\r\n                            <Dot color=\"primary\" />\r\n                            <span className=\"region-state-wrapper\">\r\n                                <span className=\"region-state\" >\r\n                                    Total\r\n                                </span>\r\n                                <span className=\"region-state-value\">\r\n                                    {data.total}\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Widget>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StatItem from \"../Regions/Stats\"\r\nimport { getRegionstats } from \"../../services/keyword\"\r\nimport { getgRegionTags } from \"../../services/container\"\r\n\r\nexport default function Dashboard() {\r\n\r\n    const [regionStats, setRegionStats] = useState([]);\r\n    const [regionTags, setRegionTags] = useState([]);\r\n    useEffect(() => {\r\n        getgRegionTags().then(data => {\r\n            setRegionTags(data);\r\n            \r\n        })\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <Grid container spacing={4}>\r\n                {\r\n                    regionTags && regionTags.map(item => <Grid item lg={3} md={4} sm={6} xs={12}><StatItem id={item._id}  key={item.name} data={item} /></Grid>)\r\n                }\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"./Components/Home\";\r\nimport Devices from \"./Components/Devices\";\r\nimport Animations from \"./Components/Animations\";\r\nimport Groups from \"./Components/Groups\";\r\nimport Containers from \"./Components/Containers\";\r\nimport Keywords from \"./Components/Keywords\";\r\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\r\n\r\n\r\nexport default function Routes() {\r\n  return <div>\r\n    <Route exact path=\"/app/\"  component={Dashboard}/>\r\n    <Route exact path=\"/app/keywords\"  component={Keywords}/>\r\n    <Route exact path=\"/app/Devices\" component={Devices}/>\r\n    <Route exact path=\"/app/Animations\" component={Animations}/>\r\n    <Route exact path=\"/app/Groups\" component={Groups}/>\r\n    <Route exact path=\"/app/Containers\" component={Containers}/>\r\n  </div>\r\n}","import React, { Component } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport logo from './logo.svg';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\"\r\n\r\nimport LeftMenu from './LeftMenu'\r\nimport Routes from './Routes'\r\n\r\nconst drawerWidth = 240;\r\n// import CheckList from './check-lists'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        fontSize: 12,\r\n    },\r\n    \r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    sidebar:{\r\n\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function App(props) {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const theme = useTheme();\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const subSetOpen = (val) => {\r\n        setOpen(val);\r\n    };\r\n    \r\n    return (\r\n        <Router>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, {\r\n                                [classes.hide]: open,\r\n                            })}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            <Route path=\"/Users\">\r\n                                <div>Users</div>\r\n                            </Route>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                \r\n                <LeftMenu classes={classes} theme={theme} open={open} setOpen={subSetOpen} />\r\n\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    {/* Content goes here */}\r\n                    <Routes />\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}