{"version":3,"sources":["logo.svg","LeftMenu.js","utils/errorHandling.js","services/keyword.js","services/group.js","utils/stateHelper.js","Components/Keywords/Active.js","Components/Keywords/Finished.js","Components/Keywords/Error.js","Components/Keywords/Running.js","Components/Keywords.js","Components/Home.js","services/device.js","Components/Devices.js","services/animation.js","Components/Animations.js","Components/Groups.js","services/container.js","Components/Containers.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LeftMenu","classes","theme","open","setOpen","location","useLocation","useState","route","setroute","useEffect","pathname","replace","toLowerCase","console","log","Drawer","variant","className","clsx","drawer","drawerOpen","drawerClose","paper","toolbar","IconButton","onClick","direction","Divider","List","sidebar","ListItem","selected","button","key","to","component","RouterLink","ListItemIcon","ListItemText","primary","handleErrors","response","ok","Error","statusText","createKeyword","data","fetch","method","headers","body","JSON","stringify","then","res","json","editKeyword","_id","deleteKeyword","id","getActive","getFinished","getWithErrors","getRunning","resumeAll","createGroup","editGroup","deleteGroup","getAll","getAnimationGroups","getDeviceGroups","addItemAction","newData","prevState","newState","push","editItemAction","oldData","indexOf","deleteItemAction","splice","Active","deviceGroupLookup","animationGroupLookup","setError","React","activeKeywords","setActiveKeywords","filtering","setFiltering","page","activeColumns","title","field","lookup","render","rowData","region_tag","type","editable","getActiveKeywords","keywordService","keywords","catch","err","toString","onRowDelete","columns","onRowAdd","keyword","onRowUpdate","actions","icon","tooltip","event","forEach","item","copyData","onRowCopy","FilterListIcon","isFreeAction","evt","options","selection","Finished","finishedKeywords","setFinishedKeywords","finishedColumns","getFinishedKeywords","done","hasError","errorMessage","message","keywordsWithError","setKeywordsWithError","errorColumns","getKeywordsWithError","Running","setKeywords","timer","setTimeout","getKeywords","clearTimeout","PanToolIcon","TabPanel","props","children","value","index","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","useStyles","makeStyles","root","backgroundColor","palette","background","Keywords","useTheme","setValue","error","animationGroups","setAnimationGroups","deviceGroups","setDeviceGroups","group","name","groupService","groups","Collapse","in","Alert","severity","action","aria-label","color","size","fontSize","AppBar","position","Tabs","onChange","newValue","indicatorColor","textColor","Tab","label","axis","onChangeIndex","dir","Grid","xs","Home","createDevice","editDevice","deleteDevice","margin","spacing","width","Devices","devices","setDevices","creationData","setGroups","grouLookup","getAllDevices","getAllGroups","deviceService","device","createAnimation","editAnimation","deleteAnimation","Animations","animations","setAnimations","getAllAnimations","animationService","animation","COLUMNS","Groups","service","pageSize","Containers","containers","setContainers","getContainers","contanerService","Routes","exact","path","display","appBar","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","overflowX","breakpoints","up","alignItems","justifyContent","padding","mixins","content","flexGrow","Boolean","window","hostname","match","ReactDOM","CssBaseline","Toolbar","edge","noWrap","val","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.641d9962.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport DevicesOtherIcon from '@material-ui/icons/DevicesOther';\r\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function LeftMenu({ classes, theme, open, setOpen }) {\r\n\r\n  const location = useLocation();\r\n  const [route, setroute] = useState(\"\");\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setroute(location.pathname.replace(\"/\", \"\").toLowerCase())\r\n  }, [location]);\r\n  console.log(route)\r\n  return (\r\n\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: open,\r\n        [classes.drawerClose]: !open,\r\n      })}\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        }),\r\n      }}\r\n    >\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List className={classes.sidebar}>\r\n        <ListItem selected={route == \"\"} button key=\"Keywords\" to={`/`} component={RouterLink}>\r\n          <ListItemIcon><VpnKeyIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Keywords\" />\r\n        </ListItem>\r\n        <ListItem selected={route == \"devices\"} button key=\"Devices\" to={`/Devices`} component={RouterLink}>\r\n          <ListItemIcon><DevicesOtherIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Devices\" />\r\n        </ListItem>\r\n        <ListItem selected={route == \"animations\"} button key=\"Animations\" to={`/Animations`} component={RouterLink}>\r\n          <ListItemIcon><DirectionsRunIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Animations\" />\r\n        </ListItem>\r\n        <ListItem selected={route == \"groups\"} button key=\"Groups\" to={`/Groups`} component={RouterLink}>\r\n          <ListItemIcon><DashboardIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Groups\" />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem selected={route == \"containers\"} button key=\"Containers\" to={`Containers/`} component={RouterLink}>\r\n          <ListItemIcon><VpnKeyIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Containers\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <Divider />\r\n    </Drawer>\r\n  );\r\n}","export const handleErrors = (response) => {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import { handleErrors } from \"../utils/errorHandling\"\r\nexport const createKeyword = (data) => {\r\n    return fetch(\"/api/keywords\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const editKeyword = (data) => {\r\n    return fetch(`/api/keywords/${data._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const deleteKeyword = (id) => {\r\n    return fetch(`/api/keywords/${id}`, {\r\n        method: 'DELETE'\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const markStopped = (id) => {\r\n    return fetch(`/api/keywords/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ running: false })\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\n\r\nexport const getAll = () => fetch(\"/api/keywords\").then(handleErrors).then(response => response.json())\r\nexport const getActive = () => fetch(\"/api/keywords/active\").then(handleErrors).then(response => response.json())\r\nexport const getFinished = () => fetch(\"/api/keywords/finished\").then(handleErrors).then(response => response.json())\r\nexport const getWithErrors = () => fetch(\"/api/keywords/errors\").then(handleErrors).then(response => response.json())\r\nexport const getRunning = () => fetch(\"/api/keywords/running\").then(handleErrors).then(response => response.json())\r\n\r\nexport const getKeyword = (id) => () => fetch(`/api/keywords/${id}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const resumeAll = () => fetch(\"/api/keywords/resumeall\").then(handleErrors).then(response => response.json())","import { handleErrors } from \"../utils/errorHandling\"\r\nexport const createGroup = (data) => {\r\n    return fetch(\"/api/groups\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const editGroup = (data) => {\r\n    return fetch(`/api/groups/${data._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const deleteGroup = (id) => {\r\n    return fetch(`/api/groups/${id}`, {\r\n        method: 'DELETE'\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const getAll = () => fetch(\"/api/groups\").then(handleErrors).then(response => response.json())\r\n\r\nexport const getGroup = (id) => fetch(`/api/groups/${id}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const getAnimationGroups = () => fetch(`/api/groups/getByType/Animation`).then(handleErrors).then(response => response.json())\r\nexport const getDeviceGroups = () => fetch(`/api/groups/getByType/Device`).then(handleErrors).then(response => response.json())\r\n","export const addItemAction = (newData) => (prevState) => {\r\n    const newState = [...prevState];\r\n    newState.push(newData);\r\n    return newState;\r\n}\r\nexport const editItemAction = (newData, oldData) => (prevState) => {\r\n    const newState = [...prevState];\r\n    debugger\r\n    newState[newState.indexOf(oldData)] = newData;\r\n    return newState;\r\n}\r\nexport const deleteItemAction = (oldData) => (prevState) => {\r\n    const newState = [...prevState];\r\n    newState.splice(newState.indexOf(oldData), 1);\r\n    return newState;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MaterialTable from 'material-table';\r\nimport * as keywordService from \"../../services/keyword\"\r\nimport * as groupService from \"../../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Active({ deviceGroupLookup, animationGroupLookup, setError }) {\r\n    const [value, setValue] = React.useState(0);\r\n    const [activeKeywords, setActiveKeywords] = useState([]);\r\n\r\n    const [filtering, setFiltering] = useState(false);\r\n\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n\r\n\r\n    const activeColumns = [\r\n        { title: 'ID', field: '_id' },\r\n        { title: 'Words', field: 'words' },\r\n        // { title: 'count', field: 'count', type: 'numeric' },\r\n        { title: 'Animation group', field: 'animation_group', lookup: animationGroupLookup },\r\n        { title: 'Device group', field: 'device_group', lookup: deviceGroupLookup },\r\n        {\r\n            title: 'Region', field: 'region_tag',\r\n            render: rowData => <span>{rowData.region_tag || \"Default\"}</span>\r\n        },\r\n        { title: 'Domain', field: 'domain' },\r\n        { title: 'TLD', field: 'tld' },\r\n        { title: 'Created', field: 'created', type: 'datetime', editable: 'never' }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        getActiveKeywords();\r\n    }, [page]);\r\n\r\n    const getActiveKeywords = () => {\r\n        return keywordService.getActive().then(({ keywords }) => setActiveKeywords(keywords)).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowAdd = (data) => {\r\n        return keywordService.createKeyword(data).then(({ keyword }) => {\r\n            setActiveKeywords(addItemAction(keyword))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowCopy = (data) => {\r\n        return keywordService.createKeyword(data).then(({ keyword }) => {\r\n            setActiveKeywords(addItemAction(keyword))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowUpdate = (newData, oldData) => {\r\n        return keywordService.editKeyword(newData).then(({ keyword }) => {\r\n            setActiveKeywords(editItemAction(keyword, oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowDelete = (oldData) => {\r\n        return keywordService.deleteKeyword(oldData._id).then(data => {\r\n            setActiveKeywords(deleteItemAction(oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    return (<MaterialTable\r\n        title=\"Active\"\r\n        columns={activeColumns}\r\n        data={activeKeywords}\r\n        editable={{\r\n            onRowAdd,\r\n            onRowUpdate,\r\n            onRowDelete,\r\n        }}\r\n        actions={[\r\n            {\r\n                icon: \"add\",\r\n                tooltip: 'Copy this keyword',\r\n                onClick: (event, data) => data.forEach(item => {\r\n                    const copyData = { ...item }\r\n                    delete copyData._id\r\n                    onRowCopy(copyData)\r\n                })\r\n            },\r\n            {\r\n                icon: FilterListIcon,\r\n                tooltip: 'Enable filtering',\r\n                isFreeAction: true,\r\n                onClick: (event) => setFiltering(!filtering)\r\n            },\r\n            {\r\n                tooltip: 'Remove All Selected Users',\r\n                icon: 'delete',\r\n                onClick: (evt, data) => data.forEach(item => onRowDelete(item))\r\n            }\r\n        ]}\r\n        options={{\r\n            selection: true,\r\n            filtering: filtering\r\n        }}\r\n    />\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MaterialTable from 'material-table';\r\nimport * as keywordService from \"../../services/keyword\"\r\nimport * as groupService from \"../../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nexport default function Finished({ deviceGroupLookup, animationGroupLookup, setError }) {\r\n    const [value, setValue] = React.useState(0);\r\n    const [finishedKeywords, setFinishedKeywords] = useState([]);\r\n    const [filtering, setFiltering] = useState(false);\r\n\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n\r\n    const finishedColumns = [\r\n        { title: 'ID', field: '_id' },\r\n        { title: 'Words', field: 'words' },\r\n        { title: 'Animation group', field: 'animation_group', lookup: animationGroupLookup },\r\n        { title: 'Device group', field: 'device_group', lookup: deviceGroupLookup },\r\n        {\r\n            title: 'Region', field: 'region_tag',\r\n            render: rowData => <span>{rowData.region_tag || \"Default\"}</span>\r\n        },\r\n        { title: 'Domain', field: 'domain' },\r\n        { title: 'TLD', field: 'tld' },\r\n        { title: 'Created', field: 'created', type: 'datetime' },\r\n        { title: 'Message', field: 'message' },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        getFinishedKeywords();\r\n    }, [page]);\r\n\r\n\r\n\r\n    const getFinishedKeywords = () => {\r\n        return keywordService.getFinished().then(({ keywords }) => setFinishedKeywords(keywords)).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowCopy = (data) => {\r\n        return keywordService.createKeyword(data).then(({ keyword }) => {\r\n            // setActiveKeywords(addItemAction(keyword))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowDelete = (oldData) => {\r\n        return keywordService.deleteKeyword(oldData._id).then(data => {\r\n            // setActiveKeywords(deleteItemAction(oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    return (\r\n        <MaterialTable\r\n            title=\"Finished\"\r\n            columns={finishedColumns}\r\n            data={finishedKeywords}\r\n            actions={[\r\n                {\r\n                    icon: \"add\",\r\n                    tooltip: 'Copy this keyword to active',\r\n                    onClick: (event, rowData) => {\r\n                        const copyData = { ...rowData, done: false, hasError: false, errorMessage: \"\", message: \"\" }\r\n                        delete copyData._id\r\n                        onRowCopy(copyData)\r\n                    }\r\n                },\r\n                {\r\n                    icon: FilterListIcon,\r\n                    tooltip: 'Enable filtering',\r\n                    isFreeAction: true,\r\n                    onClick: (event) => setFiltering(!filtering)\r\n                },\r\n                {\r\n                    tooltip: 'Remove All Selected Users',\r\n                    icon: 'delete',\r\n                    onClick: (evt, data) => data.forEach(item => onRowDelete(item))\r\n                }\r\n            ]}\r\n            options={{\r\n                selection: true,\r\n                filtering: filtering\r\n            }}\r\n        />\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MaterialTable from 'material-table';\r\nimport * as keywordService from \"../../services/keyword\"\r\nimport * as groupService from \"../../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Error({ deviceGroupLookup, animationGroupLookup, setError}) {\r\n\r\n    const [keywordsWithError, setKeywordsWithError] = useState([]);\r\n    const [filtering, setFiltering] = useState(false);\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n\r\n\r\n\r\n    const errorColumns = [\r\n        { title: 'ID', field: '_id' },\r\n        { title: 'Words', field: 'words' },\r\n        { title: 'Animation group', field: 'animation_group', lookup: animationGroupLookup },\r\n        { title: 'Device group', field: 'device_group', lookup: deviceGroupLookup },\r\n        { title: 'Created', field: 'created', type: 'datetime' },\r\n        {\r\n            title: 'Region', field: 'region_tag',\r\n            render: rowData => <span>{rowData.region_tag || \"Default\"}</span>\r\n        },\r\n        { title: 'Domain', field: 'domain' },\r\n        { title: 'TLD', field: 'tld' },\r\n        { title: 'Message', field: 'message' },\r\n        { title: 'Error Message', field: 'errorMessage' }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        getKeywordsWithError();\r\n    }, [page]);\r\n\r\n    const getKeywordsWithError = () => {\r\n        return keywordService.getWithErrors().then(({ keywords }) => setKeywordsWithError(keywords)).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowCopy = (data) => {\r\n        return keywordService.createKeyword(data).then(({ keyword }) => {\r\n            // setActiveKeywords(addItemAction(keyword))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowDelete = (oldData) => {\r\n        return keywordService.deleteKeyword(oldData._id).then(data => {\r\n            // setActiveKeywords(deleteItemAction(oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    return (\r\n        <MaterialTable\r\n            title=\"Keywords with error\"\r\n            columns={errorColumns}\r\n            data={keywordsWithError}\r\n            actions={[\r\n                {\r\n                    icon: \"add\",\r\n                    tooltip: 'Copy this keyword to active',\r\n                    onClick: (event, rowData) => {\r\n                        const copyData = { ...rowData, done: false, hasError: false, errorMessage: \"\", message: \"\" }\r\n                        delete copyData._id\r\n                        onRowCopy(copyData)\r\n                    }\r\n                },\r\n                {\r\n                    icon: FilterListIcon,\r\n                    tooltip: 'Enable filtering',\r\n                    isFreeAction: true,\r\n                    onClick: (event) => setFiltering(!filtering)\r\n                },\r\n                {\r\n                    tooltip: 'Remove All Selected Users',\r\n                    icon: 'delete',\r\n                    onClick: (evt, data) => data.forEach(item => onRowDelete(item))\r\n                }\r\n            ]}\r\n            options={{\r\n                selection: true,\r\n                filtering: filtering\r\n            }}\r\n        />\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MaterialTable from 'material-table';\r\nimport * as keywordService from \"../../services/keyword\"\r\nimport * as groupService from \"../../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PanToolIcon from '@material-ui/icons/PanTool';\r\n\r\n\r\n\r\nexport default function Running({ deviceGroupLookup, animationGroupLookup, setError }) {\r\n    const [value, setValue] = React.useState(0);\r\n    const [keywords, setKeywords] = useState([]);\r\n\r\n    const [filtering, setFiltering] = useState(false);\r\n\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n\r\n\r\n    const columns = [\r\n        { title: 'ID', field: '_id' },\r\n        { title: 'Words', field: 'words' },\r\n        { title: 'Animation group', field: 'animation_group', lookup: animationGroupLookup },\r\n        { title: 'Device', field: 'device' },\r\n        {\r\n            title: 'Region', field: 'region_tag',\r\n            render: rowData => <span>{rowData.region_tag || \"Default\"}</span>\r\n        },\r\n        { title: 'Domain', field: 'domain' },\r\n        { title: 'TLD', field: 'tld' },\r\n        { title: 'Created', field: 'created', type: 'datetime', editable: 'never' }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            getKeywords();\r\n        }, 2000);\r\n        return () => clearTimeout(timer);\r\n    });\r\n\r\n    // useEffect(() => {\r\n    //     getKeywords();\r\n    // }, [page]);\r\n\r\n    const getKeywords = () => {\r\n        return keywordService.getRunning().then(({ keywords }) => setKeywords(keywords)).catch(err => setError(err.toString()));\r\n    }\r\n    const markStopped = (id) => {\r\n        return keywordService.markStopped(id).catch(err => setError(err.toString()));\r\n    }\r\n    const resumeAll = (id) => {\r\n        return keywordService.resumeAll().catch(err => setError(err.toString()));\r\n    }\r\n    return (<MaterialTable\r\n        title=\"Running right now\"\r\n        columns={columns}\r\n        data={keywords}\r\n        actions={[\r\n            {\r\n                icon: PanToolIcon,\r\n                tooltip: 'Resume all',\r\n                isFreeAction: true,\r\n                onClick: (evt, data) => resumeAll()\r\n            }\r\n        ]}\r\n        options={{\r\n            filtering: filtering\r\n        }}\r\n    />\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MaterialTable from 'material-table';\r\nimport * as keywordService from \"../services/keyword\"\r\nimport * as groupService from \"../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Active from \"./Keywords/Active\"\r\nimport Finished from \"./Keywords/Finished\"\r\nimport Error from \"./Keywords/Error\"\r\nimport Running from \"./Keywords/Running\"\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    }\r\n}));\r\n\r\nexport default function Keywords() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n    const [error, setError] = useState(false);\r\n    const [animationGroups, setAnimationGroups] = useState([]);\r\n    const [deviceGroups, setDeviceGroups] = useState([]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    const animationGroupLookup = {};\r\n    animationGroups.forEach(group => {\r\n        animationGroupLookup[group._id] = group.name;\r\n    })\r\n    const deviceGroupLookup = {};\r\n    deviceGroups.forEach(group => {\r\n        deviceGroupLookup[group._id] = group.name;\r\n    })\r\n\r\n    useEffect(() => {\r\n        getAnimationGroups();\r\n        getDeviceGroups();\r\n    }, [page]);\r\n\r\n    const getAnimationGroups = () => {\r\n        return groupService.getAnimationGroups().then(({ groups }) => setAnimationGroups(groups)).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    const getDeviceGroups = () => {\r\n        return groupService.getDeviceGroups().then(({ groups }) => setDeviceGroups(groups)).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Collapse in={error}>\r\n                <Alert\r\n                    severity=\"error\"\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setError(false);\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {error}\r\n                </Alert>\r\n            </Collapse>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"full width tabs example\"\r\n                >\r\n                    <Tab label=\"Active keywords\" {...a11yProps(0)} />\r\n                    <Tab label=\"Finished keywords\" {...a11yProps(1)} />\r\n                    <Tab label=\"Keyword with error\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={value}\r\n                onChangeIndex={handleChangeIndex}\r\n            >\r\n                <TabPanel value={value} index={0} dir={theme.direction}>\r\n                    <Grid item xs={12} className=\"productType-container\">\r\n                        <Active deviceGroupLookup={deviceGroupLookup} animationGroupLookup={animationGroupLookup} setError={setError} />\r\n                    </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} dir={theme.direction}>\r\n                    <Grid item xs={12} className=\"productType-container\">\r\n                        <Finished deviceGroupLookup={deviceGroupLookup} animationGroupLookup={animationGroupLookup} setError={setError} />\r\n                    </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2} dir={theme.direction}>\r\n                    <Grid item xs={12} className=\"productType-container\">\r\n                        <Error deviceGroupLookup={deviceGroupLookup} animationGroupLookup={animationGroupLookup} setError={setError} />\r\n                    </Grid>\r\n                </TabPanel>\r\n            </SwipeableViews>\r\n            <Grid item xs={12} className=\"productType-container\">\r\n                <Running deviceGroupLookup={deviceGroupLookup} animationGroupLookup={animationGroupLookup} setError={setError} />\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Keywords from \"./Keywords\"\r\n\r\nexport default function Home() {\r\n    fetch(\"/api/Keywords\")\r\n    return <div>\r\n        <Keywords></Keywords>\r\n    </div>\r\n}","import { handleErrors } from \"../utils/errorHandling\"\r\nexport const createDevice = (data) => {\r\n    return fetch(\"/api/devices\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const editDevice = (data) => {\r\n    return fetch(`/api/devices/${data._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const deleteDevice = (id) => {\r\n    return fetch(`/api/devices/${id}`, {\r\n        method: 'DELETE'\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const getAll = () => fetch(\"/api/devices\").then(handleErrors).then(response => response.json())\r\n\r\nexport const getDevice = (id) => () => fetch(`/api/devices/${id}`).then(handleErrors).then(response => response.json())","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table';\r\nimport * as deviceService from \"../services/device\"\r\nimport * as groupService from \"../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function Devices() {\r\n    const classes = useStyles();\r\n    const [devices, setDevices] = useState([]);\r\n    const [creationData, setCreationData] = useState({ type: \"\", name: \"\" });\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n    const [error, setError] = useState(false);\r\n    const [groups, setGroups] = useState([]);\r\n\r\n\r\n    const grouLookup = {};\r\n    groups.forEach(group=>{\r\n        grouLookup[group._id] = group.name;\r\n    })\r\n\r\n    const columns = [\r\n        { title: 'Name', field: 'name' },\r\n        { title: 'User Agent', field: 'user_agent' },\r\n        { title: 'Window Size', field: 'window_size' },\r\n        { title: 'Is Mobile', field: 'mobile', type: 'boolean' },\r\n        { title: 'Group', field: 'group', lookup: grouLookup }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        getAllDevices();\r\n        getAllGroups();\r\n    }, [page]);\r\n\r\n    const getAllGroups = () => {\r\n        return groupService.getDeviceGroups().then(({groups}) => setGroups(groups)).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    const getAllDevices = () => {\r\n        return deviceService.getAll().then(data => setDevices(data)).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowAdd = (data) => {\r\n        return deviceService.createDevice(data).then(({device}) => {\r\n            setDevices(addItemAction(device))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    const onRowUpdate = (newData, oldData) => {\r\n        return deviceService.editDevice(newData).then(({device}) => {\r\n            setDevices(editItemAction(device, oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowDelete = (oldData) => {\r\n        return deviceService.deleteDevice(oldData._id).then(data => {\r\n            setDevices(deleteItemAction(oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const nameChange = (event) => {\r\n        const name = event.target.value;\r\n        setCreationData({ ...creationData, name })\r\n    }\r\n    const typeChange = (event) => {\r\n        const type = event.target.value;\r\n        setCreationData({ ...creationData, type })\r\n    }\r\n    const { name, type } = creationData || {};\r\n\r\n    return <Grid item xs={10} className=\"productType-container\">\r\n        <Collapse in={error}>\r\n            <Alert\r\n                severity=\"error\"\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setError(false);\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {error}\r\n        </Alert>\r\n        </Collapse>\r\n        <MaterialTable\r\n            title=\"Devices\"\r\n            columns={columns}\r\n            data={devices}\r\n            editable={{\r\n                onRowAdd,\r\n                onRowUpdate,\r\n                onRowDelete,\r\n            }}\r\n        />\r\n    </Grid>\r\n\r\n}","import { handleErrors } from \"../utils/errorHandling\"\r\nexport const createAnimation = (data) => {\r\n    return fetch(\"/api/animations\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const editAnimation = (data) => {\r\n    return fetch(`/api/animations/${data._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const deleteAnimation = (id) => {\r\n    return fetch(`/api/animations/${id}`, {\r\n        method: 'DELETE'\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\nexport const getAll = () => fetch(\"/api/animations\").then(handleErrors).then(response => response.json())\r\n\r\nexport const getAnimation = (id) => () => fetch(`/api/animations/${id}`).then(handleErrors).then(response => response.json())","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table';\r\nimport * as animationService from \"../services/animation\"\r\nimport * as groupService from \"../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function Animations() {\r\n    const classes = useStyles();\r\n    const [animations, setAnimations] = useState([]);\r\n    const [creationData, setCreationData] = useState({ type: \"\", name: \"\" });\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n    const [error, setError] = useState(false);\r\n    const [groups, setGroups] = useState([]);\r\n\r\n\r\n    const grouLookup = {};\r\n    groups.forEach(group=>{\r\n        grouLookup[group._id] = group.name;\r\n    })\r\n\r\n    const columns = [\r\n        { title: 'Name', field: 'name' },\r\n        { title: 'Group', field: 'group', lookup: grouLookup }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        getAllAnimations();\r\n        getAllGroups();\r\n    }, [page]);\r\n\r\n    const getAllGroups = () => {\r\n        return groupService.getAnimationGroups().then(({groups}) => setGroups(groups)).catch(err => setError(err.toString()));\r\n    }\r\n    \r\n    const getAllAnimations = () => {\r\n        return animationService.getAll().then(data => setAnimations(data)).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowAdd = (data) => {\r\n        return animationService.createAnimation(data).then(({animation}) => {\r\n            setAnimations(addItemAction(animation))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    const onRowUpdate = (newData, oldData) => {\r\n        return animationService.editAnimation(newData).then(({animation}) => {\r\n            setAnimations(editItemAction(animation, oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowDelete = (oldData) => {\r\n        return animationService.deleteAnimation(oldData._id).then(data => {\r\n            setAnimations(deleteItemAction(oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const nameChange = (event) => {\r\n        const name = event.target.value;\r\n        setCreationData({ ...creationData, name })\r\n    }\r\n    const typeChange = (event) => {\r\n        const type = event.target.value;\r\n        setCreationData({ ...creationData, type })\r\n    }\r\n    const { name, type } = creationData || {};\r\n\r\n    return <Grid item xs={10} className=\"productType-container\">\r\n        <Collapse in={error}>\r\n            <Alert\r\n                severity=\"error\"\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setError(false);\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {error}\r\n        </Alert>\r\n        </Collapse>\r\n        <MaterialTable\r\n            title=\"Animations\"\r\n            columns={columns}\r\n            data={animations}\r\n            editable={{\r\n                onRowAdd,\r\n                onRowUpdate,\r\n                onRowDelete,\r\n            }}\r\n        />\r\n    </Grid>\r\n\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table';\r\nimport * as service from \"../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst ANIMATYION_TYPE = \"Animation\"\r\nconst DEVICE_TYPE = \"Device\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst COLUMNS = [\r\n    { title: 'Name', field: 'name' },\r\n    { title: 'Type', field: 'type', lookup: { [ANIMATYION_TYPE]: ANIMATYION_TYPE, [DEVICE_TYPE]: DEVICE_TYPE } }\r\n]\r\n\r\n\r\nexport default function Groups() {\r\n    const classes = useStyles();\r\n    const [groups, setGroups] = useState([]);\r\n    const [creationData, setCreationData] = useState({ type: \"\", name: \"\" });\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getAllGroups();\r\n    }, [page]);\r\n\r\n\r\n    const getAllGroups = () => {\r\n        return service.getAll().then(data => setGroups(data)).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowAdd = (data) => {\r\n        return service.createGroup(data).then(({group}) => {\r\n            setGroups(addItemAction(group))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    const onRowUpdate = (newData, oldData) => {\r\n        return service.editGroup(newData).then(({group}) => {\r\n            setGroups(editItemAction(group, oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const onRowDelete = (oldData) => {\r\n        return service.deleteGroup(oldData._id).then(data => {\r\n            setGroups(deleteItemAction(oldData))\r\n        }).catch(err => setError(err.toString()));\r\n    }\r\n    const nameChange = (event) => {\r\n        const name = event.target.value;\r\n        setCreationData({ ...creationData, name })\r\n    }\r\n    const typeChange = (event) => {\r\n        const type = event.target.value;\r\n        setCreationData({ ...creationData, type })\r\n    }\r\n    const { name, type } = creationData || {};\r\n\r\n    return <Grid item xs={10} className=\"productType-container\">\r\n        <Collapse in={error}>\r\n            <Alert\r\n                severity=\"error\"\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setError(false);\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {error}\r\n        </Alert>\r\n        </Collapse>\r\n        <MaterialTable\r\n            title=\"Groups\"\r\n            pageSize={50}\r\n            columns={COLUMNS}\r\n            data={groups}\r\n            editable={{\r\n                onRowAdd,\r\n                onRowUpdate,\r\n                onRowDelete,\r\n            }}\r\n        />\r\n    </Grid>\r\n\r\n}","import { handleErrors } from \"../utils/errorHandling\"\r\n\r\nexport const getAll = () => fetch(\"/api/containers\").then(handleErrors).then(response => response.json())\r\nexport const getRegions = () => fetch(\"/api/regions\").then(handleErrors).then(response => response.json())","import React, { useState, useEffect } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table';\r\nimport * as contanerService from \"../services/container\"\r\nimport * as groupService from \"../services/group\"\r\nimport { addItemAction, editItemAction, deleteItemAction } from \"../utils/stateHelper\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function Containers() {\r\n    const classes = useStyles();\r\n    const [containers, setContainers] = useState([]);\r\n\r\n    //TODO implement pagination\r\n    const [page, setPage] = useState(1);\r\n    const [error, setError] = useState(false);\r\n\r\n    const columns = [\r\n        { title: 'Name', field: 'name' },\r\n        { title: 'VPN', field: 'vpn_name' },\r\n        { title: 'Region', field: 'current_region' },\r\n        { title: 'Last region change', field: 'last_region_change', type: 'datetime' }\r\n    ];\r\n\r\n    const [filtering, setFiltering] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getContainers();\r\n    }, [page]);\r\n\r\n    const getContainers = () => {\r\n        return contanerService.getAll().then(data => setContainers(data)).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    return <Grid item xs={10} className=\"productType-container\">\r\n        <Collapse in={error}>\r\n            <Alert\r\n                severity=\"error\"\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setError(false);\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {error}\r\n            </Alert>\r\n        </Collapse>\r\n        <MaterialTable\r\n            title=\"Containers\"\r\n            columns={columns}\r\n            data={containers}\r\n            actions={[\r\n               \r\n                {\r\n                    icon: FilterListIcon,\r\n                    tooltip: 'Enable filtering',\r\n                    isFreeAction: true,\r\n                    onClick: (event) => setFiltering(!filtering)\r\n                }\r\n            ]}\r\n            options={{\r\n                filtering: filtering\r\n            }}\r\n        />\r\n    </Grid>\r\n\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"./Components/Home\";\r\nimport Devices from \"./Components/Devices\";\r\nimport Animations from \"./Components/Animations\";\r\nimport Groups from \"./Components/Groups\";\r\nimport Containers from \"./Components/Containers\";\r\n\r\n\r\nexport default function Routes() {\r\n  return <div>\r\n    <Route exact path=\"/\"  component={Home}/>\r\n    <Route exact path=\"/Devices\" component={Devices}/>\r\n    <Route exact path=\"/Animations\" component={Animations}/>\r\n    <Route exact path=\"/Groups\" component={Groups}/>\r\n    <Route exact path=\"/Containers\" component={Containers}/>\r\n  </div>\r\n}","import React, { Component } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport logo from './logo.svg';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n\nimport LeftMenu from './LeftMenu'\nimport Routes from './Routes'\n\nconst drawerWidth = 240;\n// import CheckList from './check-lists'\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        fontSize: 12,\n    },\n    \n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    sidebar:{\n\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nexport default function App(props) {\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const theme = useTheme();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const subSetOpen = (val) => {\n        setOpen(val);\n    };\n    \n    return (\n        <Router>\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    position=\"fixed\"\n                    className={clsx(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={handleDrawerOpen}\n                            edge=\"start\"\n                            className={clsx(classes.menuButton, {\n                                [classes.hide]: open,\n                            })}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" noWrap>\n                            <Route path=\"/Users\">\n                                <div>Users</div>\n                            </Route>\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                \n                <LeftMenu classes={classes} theme={theme} open={open} setOpen={subSetOpen} />\n\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    {/* Content goes here */}\n                    <Routes />\n                </main>\n            </div>\n        </Router>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}